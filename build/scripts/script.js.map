{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/puzzle.js","src/scripts/script.js"],"names":[],"mappings":"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","file":"script.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","let numRows;\nlet numCols;\nlet numCells;\n\nlet container;\nlet cells = [];\nlet adjacents = [];\nlet blankCell;\n\nlet startSolved;\n\n// UTILS:\n// create 'undefined' arrays to loop/map over\nconst arr = (length) => Array.from({ length });\n\n// shuffle children - better than usual method:\n// https://medium.com/@nitinpatel_20236/how-to-shuffle-correctly-shuffle-an-array-in-javascript-15ea3f84bfb\nconst shuffle = (array) => {\n  for (let i = array.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * i);\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n};\n// create element from html string\nconst strToElement = (htmlStr) => {\n  const template = document.createElement(\"template\");\n  template.innerHTML = htmlStr;\n  return template.content.firstElementChild;\n};\n\nconst createElements = function () {\n  let cellNumber = 0;\n\n  arr(numRows).forEach(() => {\n    arr(numCols).forEach(() => {\n      cellNumber += 1;\n      \n      const isBlank = cellNumber === numCells;\n\n      const cell = strToElement(\n        `<button\n          ${isBlank ? 'class=\"blank\"' : \"\"}\n          tabindex=\"-1\"\n        >${isBlank ? \"(blank)\" : cellNumber}</button>`\n      );\n\n      cell.origIndex = cellNumber - 1;\n\n      cells.push(cell);\n      if (isBlank) blankCell = cell;\n    });\n  });\n\n  // shuffle cells and append as children to our container\n  container = strToElement(\n    `<div data-rows=\"${numRows}\" data-cols=\"${numCols}\"></div>`\n  );\n\n  if (!startSolved) shuffle(cells);\n  cells.forEach((cell) => container.appendChild(cell));\n};\n\n\nconst addElements = function () {\n  createElements();\n  document.body.appendChild(container);\n};\n\nconst cellsInSequence = function() {\n  return cells.every(cell => cells.indexOf(cell) === cell.origIndex);\n};\n\n// math utils for position...\nconst rowNum = i => Math.ceil((i + 1) / numCols);\nconst colNum = i => (i % numCols) + 1;\nconst getAdjacentCells = function() {\n  const adjacentInds = [];\n  const i = cells.indexOf(blankCell);\n\n  const row = rowNum(i);\n  if (row !== 1) adjacentInds.push(i - numCols); // cell above if not first row\n  if (row !== numRows) adjacentInds.push(i + numCols); // cell below if not last row\n  \n  const col = colNum(i);\n  if (col !== 1) adjacentInds.push(i - 1); // cell before if not first col\n  if (col !== numCols) adjacentInds.push(i + 1); // cell after if not last col\n\n  adjacents = adjacentInds.map(ai => cells[ai]);\n};\n\nconst isSolved = function() {\n  document.documentElement.classList.toggle('is-solved', cellsInSequence());\n};\n\nconst swapElements = function(obj1, obj2) {\n  // taken from https://stackoverflow.com/questions/10716986/swap-two-html-elements-and-preserve-event-listeners-on-them/10717422#10717422 to save time:\n  var parent2 = obj2.parentNode;\n  var next2 = obj2.nextSibling;\n  if (next2 === obj1) {\n      parent2.insertBefore(obj1, obj2);\n  } else {\n      obj1.parentNode.insertBefore(obj2, obj1);\n      if (next2) {\n          parent2.insertBefore(obj1, next2);\n      } else {\n          parent2.appendChild(obj1);\n      }\n  }\n\n  cells = Array.from(obj2.parentNode.children);\n  isSolved();\n}\n\nconst adjacentsOn = function() {\n  console.log('adjacentsOn', getAdjacentCells(), adjacents);\n  adjacents.forEach(cell => {\n    cell.addEventListener('click', onCellClick, false);\n    cell.classList.add('adjacent');\n    cell.tabIndex = 0;\n  });\n  isSolved();\n};\n\nconst adjacentsOff = function() {\n  console.log('adjacentsOff', adjacents);\n  adjacents.forEach(cell => {\n    cell.removeEventListener('click', onCellClick, false);\n    cell.classList.remove('adjacent');\n    cell.tabIndex = -1;\n  });\n};\n\nconst onCellClick = function(event) {\n  adjacentsOff();\n  swapElements(event.target, blankCell);\n  adjacentsOn();\n};\n\nconst init = function (rows, cols, solved) {\n  numRows = rows;\n  numCols = cols;\n  numCells = rows * cols;\n  startSolved = solved;\n\n  addElements();\n  adjacentsOn();\n};\n\nexport default init;\n","import puzzle from \"./puzzle\";\n\nconst init = function () {\n  puzzle(4, 4);\n  // supports 2->4 cols/rows\n  // danger - small numbers might make some sequences impossible to arrange to\n};\n\ninit();\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}